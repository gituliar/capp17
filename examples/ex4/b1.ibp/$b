BasisDirectory[$b] = StringDrop[DirectoryName[$Input], -1]
$b /: BasisSectors[$b] := {js[$b, 1, 1, 1, 1, 0, 0, 0], 
   js[$b, 1, 1, 1, 1, 1, 0, 0]}
$b /: CutDs[$b] := {1, 1, 1, 1, 0, 0, 0}
$b /: Definitions[$b] := {Hold[MetricTensor[] === n, SetDim[n]], 
   Hold[VecQ[p1], Declare[p1, Vector]], Hold[VecQ[p3], Declare[p3, Vector]], 
   Hold[VecQ[q1], Declare[q1, Vector]], Hold[VecQ[q2], Declare[q2, Vector]], 
   Hold[TypeOf[q1] === Vector, Declare[q1, Vector]], 
   Hold[TypeOf[q2] === Vector, Declare[q2, Vector]], 
   Hold[TypeOf[s] === Number, Declare[s, Number]], 
   Hold[sp[q1, q1] === 0, sp[q1, q1] = 0], Hold[sp[q2, q2] === 0, 
    sp[q2, q2] = 0], Hold[sp[q1, q2] === s/2, sp[q1, q2] = s/2]}
$b /: Ds[$b] := {sp[p1, p1], sp[p3, p3], sp[-p1 - p3 + q1 + q2, 
    -p1 - p3 + q1 + q2], s*x - 2*sp[p3, q1 + q2], sp[p1, p3], sp[p1, q1], 
   sp[p3, q1]}
$b /: EMs[$b] := {q1, q2}
$b /: IBP[$b] := {-(#3*j[$b, -1 + #1, #2, 1 + #3, #4, #5, #6, #7]) + 
     #3*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (n - 2*#1 - #3 - #5 - #6)*j[$b, #1, #2, #3, #4, #5, #6, #7] + 
     #3*j[$b, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     #3*s*(-1 + x)*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7], 
    -(#5*j[$b, -1 + #1, #2, #3, #4, 1 + #5, #6, #7]) + 
     #4*j[$b, -1 + #1, #2, #3, 1 + #4, #5, #6, #7] - 
     #3*j[$b, -1 + #1, #2, 1 + #3, #4, #5, #6, #7] + 
     #4*j[$b, #1, -1 + #2, #3, 1 + #4, #5, #6, #7] + 
     #3*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] - 
     #4*j[$b, #1, #2, -1 + #3, 1 + #4, #5, #6, #7] - 
     #7*j[$b, #1, #2, #3, #4, #5, -1 + #6, 1 + #7] + 
     (-#3 + #4)*j[$b, #1, #2, #3, #4, #5, #6, #7] + 
     2*#4*j[$b, #1, #2, #3, 1 + #4, -1 + #5, #6, #7] - 
     #4*s*(-1 + x)*j[$b, #1, #2, #3, 1 + #4, #5, #6, #7] + 
     #3*j[$b, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     #3*s*(-1 + x)*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     2*#2*j[$b, #1, 1 + #2, #3, #4, -1 + #5, #6, #7], 
    -(#5*j[$b, #1, -1 + #2, #3, #4, 1 + #5, #6, #7]) - 
     2*#3*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] - 
     #6*j[$b, #1, #2, #3, #4, #5, 1 + #6, -1 + #7] - 
     #3*j[$b, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] + 
     #3*s*x*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     2*#1*j[$b, 1 + #1, #2, #3, #4, -1 + #5, #6, #7], 
    -2*#3*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (n - 2*#2 - #4 - #5 - #7)*j[$b, #1, #2, #3, #4, #5, #6, #7] + 
     #4*s*x*j[$b, #1, #2, #3, 1 + #4, #5, #6, #7] - 
     #3*j[$b, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] + 
     #3*s*x*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7], 
    -(#5*j[$b, #1, #2, #3, #4, 1 + #5, #6, -1 + #7]) - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     #3*s*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     2*#1*j[$b, 1 + #1, #2, #3, #4, #5, -1 + #6, #7], 
    -(#5*j[$b, #1, #2, #3, #4, 1 + #5, -1 + #6, #7]) + 
     #4*s*j[$b, #1, #2, #3, 1 + #4, #5, #6, #7] - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     #3*s*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     2*#2*j[$b, #1, 1 + #2, #3, #4, #5, #6, -1 + #7], 
    -(#3*j[$b, -1 + #1, #2, 1 + #3, #4, #5, #6, #7]) - 
     #3*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (#5*j[$b, #1, #2, #3, -1 + #4, 1 + #5, #6, #7])/2 + 
     (-#1 + #3)*j[$b, #1, #2, #3, #4, #5, #6, #7] - 
     (#6*s*j[$b, #1, #2, #3, #4, #5, 1 + #6, #7])/2 + 
     #5*j[$b, #1, #2, #3, #4, 1 + #5, #6, -1 + #7] - 
     (#5*s*x*j[$b, #1, #2, #3, #4, 1 + #5, #6, #7])/2 - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] + 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] + 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] - 
     #1*j[$b, 1 + #1, -1 + #2, #3, #4, #5, #6, #7] + 
     #1*j[$b, 1 + #1, #2, -1 + #3, #4, #5, #6, #7] - 
     #1*j[$b, 1 + #1, #2, #3, -1 + #4, #5, #6, #7] - 
     2*#1*j[$b, 1 + #1, #2, #3, #4, -1 + #5, #6, #7] + 
     2*#1*j[$b, 1 + #1, #2, #3, #4, #5, -1 + #6, #7] + 
     #1*s*(-1 + x)*j[$b, 1 + #1, #2, #3, #4, #5, #6, #7], 
    -(#5*j[$b, -1 + #1, #2, #3, #4, 1 + #5, #6, #7])/2 - 
     #3*j[$b, -1 + #1, #2, 1 + #3, #4, #5, #6, #7] - 
     (#5*j[$b, #1, -1 + #2, #3, #4, 1 + #5, #6, #7])/2 - 
     #3*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (#5*j[$b, #1, #2, -1 + #3, #4, 1 + #5, #6, #7])/2 - 
     (#5*j[$b, #1, #2, #3, -1 + #4, 1 + #5, #6, #7])/2 + 
     (#3 - #5)*j[$b, #1, #2, #3, #4, #5, #6, #7] - 
     (#7*s*j[$b, #1, #2, #3, #4, #5, #6, 1 + #7])/2 + 
     #5*j[$b, #1, #2, #3, #4, 1 + #5, -1 + #6, #7] + 
     (#5*s*(-1 + x)*j[$b, #1, #2, #3, #4, 1 + #5, #6, #7])/2 + 
     #4*s*j[$b, #1, #2, #3, 1 + #4, #5, #6, #7] - 
     2*#3*j[$b, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] + 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] + 
     2*#3*j[$b, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     #2*j[$b, #1, 1 + #2, #3, -1 + #4, #5, #6, #7] + 
     2*#2*j[$b, #1, 1 + #2, #3, #4, #5, #6, -1 + #7] - 
     #2*s*x*j[$b, #1, 1 + #2, #3, #4, #5, #6, #7]} & 
$b /: Information[$b] := (If[ValueQ[$b::usage], 
    Information[$b, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[$b] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[$b, __]]] :> 
           HoldForm[LiteRed`Private`f$[$b, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[$b, 
              ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[$b], 
                 HoldPattern[LiteRed`Private`a$_ :> LiteRed`Private`b$_] /; 
                  MatchQ[LiteRed`Private`a$[[1,0]], LiteRed`Private`x$[[1,
                    0]]]] /. HoldPattern -> HoldForm]]) & , 
           Appearance -> "Frameless", BaseStyle -> "InformationLink"]}, 
        {1}]], 5], DefaultBaseStyle -> "InfoGrid"]])
$b /: jRules[$b, 1, 1, 1, 1, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[$b], "/jRules[$b, 1, 1, 1, 1, 0, 0, 0]"]]
$b /: jRules[$b, 1, 1, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[$b], "/jRules[$b, 1, 1, 1, 1, 1, 0, 0]"]]
$b /: jSymmetries[$b, 1, 1, 1, 1, 0, 0, 0] := 
  {{j[$b, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
       (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] /; True :> 
     Expand[j[$b, n1, n2, n3, n4, n5, n6, n7]]}, 
   {j[$b, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
       (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] /; True :> 
     Expand[j[$b, n3, n2, n1, n4, 0, 0, n7]/
       ((-j[$b, 0, 0, 0, 0, 0, -1, 0] - j[$b, 0, 0, 0, 0, 0, 0, -1] + 
          (s*j[$b, 0, 0, 0, 0, 0, 0, 0])/2)^n6*
        (-j[$b, 0, -1, 0, 0, 0, 0, 0] - j[$b, 0, 0, 0, -1, 0, 0, 0]/2 - 
          j[$b, 0, 0, 0, 0, -1, 0, 0] + (s*x*j[$b, 0, 0, 0, 0, 0, 0, 0])/2)^
         n5)]}}
$b /: jSymmetries[$b, 1, 1, 1, 1, 1, 0, 0] := 
  {{j[$b, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
       (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive] /; True :> 
     Expand[j[$b, n1, n2, n3, n4, n5, n6, n7]]}}
$b /: LI[$b] := {(#3*s*j[$b, -1 + #1, #2, 1 + #3, #4, #5, #6, #7])/2 + 
     (#3*s*j[$b, #1, -1 + #2, 1 + #3, #4, #5, #6, #7])/2 - 
     ((#3 + #4 - #6 - #7)*s*j[$b, #1, #2, #3, #4, #5, #6, #7])/2 - 
     2*#4*s*j[$b, #1, #2, #3, 1 + #4, #5, #6, -1 + #7] + 
     (#4*s^2*x*j[$b, #1, #2, #3, 1 + #4, #5, #6, #7])/2 + 
     #3*s*j[$b, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] - 
     2*#3*s*j[$b, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] - 
     2*#3*s*j[$b, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     (#3*s^2*j[$b, #1, #2, 1 + #3, #4, #5, #6, #7])/2} & 
$b /: LMs[$b] := {p1, p3}
$b /: MappedSectors[$b] := {}
$b /: MIs[$b] := {j[$b, 1, 1, 1, 1, 0, 0, 0]}
$b /: NonZeroSectors[$b] := {js[$b, 1, 1, 1, 1, 0, 0, 0], 
   js[$b, 1, 1, 1, 1, 1, 0, 0]}
$b /: SimpleSectors[$b] := {js[$b, 1, 1, 1, 1, 0, 0, 0]}
$b /: SPs[$b] := {sp[p1, p1], sp[p1, p3], sp[p1, q1], sp[p1, q2], sp[p3, p3], 
   sp[p3, q1], sp[p3, q2]}
$b /: SR[$b] := Module[{LiteRed`Private`jsc$ = jSector[j[$b, ##1]]}, 
    If[MemberQ[UniqueSectors[$b], LiteRed`Private`jsc$], 
     DeleteCases[DeleteDuplicates[Collectj[j[$b, ##1] - 
         (j[$b, ##1] /. jSymmetries @@ LiteRed`Private`jsc$)]], 0], {}]] & 
$b /: Toj[$b] := {sp[p1, p1] -> j[$b, -1, 0, 0, 0, 0, 0, 0], 
   sp[p1, p3] -> j[$b, 0, 0, 0, 0, -1, 0, 0], 
   sp[p1, q1] -> j[$b, 0, 0, 0, 0, 0, -1, 0], 
   sp[p1, q2] -> (s - s*x + j[$b, -1, 0, 0, 0, 0, 0, 0] + 
      j[$b, 0, -1, 0, 0, 0, 0, 0] - j[$b, 0, 0, -1, 0, 0, 0, 0] + 
      j[$b, 0, 0, 0, -1, 0, 0, 0] + 2*j[$b, 0, 0, 0, 0, -1, 0, 0] - 
      2*j[$b, 0, 0, 0, 0, 0, -1, 0])/2, sp[p3, p3] -> 
    j[$b, 0, -1, 0, 0, 0, 0, 0], sp[p3, q1] -> j[$b, 0, 0, 0, 0, 0, 0, -1], 
   sp[p3, q2] -> (s*x - j[$b, 0, 0, 0, -1, 0, 0, 0] - 
      2*j[$b, 0, 0, 0, 0, 0, 0, -1])/2}
$b /: UniqueSectors[$b] := {js[$b, 1, 1, 1, 1, 0, 0, 0], 
   js[$b, 1, 1, 1, 1, 1, 0, 0]}
$b /: ZerojRule[$b] := LiteRed`Private`jjj:j[$b, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 1, 0, 1, 0, 0}, {1, 1, 0, 1, 1, 0, 0}, {0, 1, 1, 1, 1, 0, 0}, 
        {1, 0, 1, 1, 1, 0, 0}}]
$b /: ZeroSectors[$b] := {js[$b, 0, 0, 0, 0, 0, 0, 0], 
   js[$b, 0, 0, 0, 0, 1, 0, 0], js[$b, 0, 0, 0, 1, 0, 0, 0], 
   js[$b, 0, 0, 1, 0, 0, 0, 0], js[$b, 0, 1, 0, 0, 0, 0, 0], 
   js[$b, 1, 0, 0, 0, 0, 0, 0], js[$b, 0, 0, 0, 1, 1, 0, 0], 
   js[$b, 0, 0, 1, 0, 1, 0, 0], js[$b, 0, 0, 1, 1, 0, 0, 0], 
   js[$b, 0, 1, 0, 0, 1, 0, 0], js[$b, 0, 1, 0, 1, 0, 0, 0], 
   js[$b, 0, 1, 1, 0, 0, 0, 0], js[$b, 1, 0, 0, 0, 1, 0, 0], 
   js[$b, 1, 0, 0, 1, 0, 0, 0], js[$b, 1, 0, 1, 0, 0, 0, 0], 
   js[$b, 1, 1, 0, 0, 0, 0, 0], js[$b, 0, 0, 1, 1, 1, 0, 0], 
   js[$b, 0, 1, 0, 1, 1, 0, 0], js[$b, 0, 1, 1, 0, 1, 0, 0], 
   js[$b, 0, 1, 1, 1, 0, 0, 0], js[$b, 1, 0, 0, 1, 1, 0, 0], 
   js[$b, 1, 0, 1, 0, 1, 0, 0], js[$b, 1, 0, 1, 1, 0, 0, 0], 
   js[$b, 1, 1, 0, 0, 1, 0, 0], js[$b, 1, 1, 0, 1, 0, 0, 0], 
   js[$b, 1, 1, 1, 0, 0, 0, 0], js[$b, 0, 1, 1, 1, 1, 0, 0], 
   js[$b, 1, 0, 1, 1, 1, 0, 0], js[$b, 1, 1, 0, 1, 1, 0, 0], 
   js[$b, 1, 1, 1, 0, 1, 0, 0]}
$b::usage = "2-loop basis with 2 external momenta.\nUse Information[$b] to \
get basis summary.\nThis string can be redefined by setting \
$b::usage=\"\[Ellipsis]\""; Information[$b, LongForm -> False]; 
LiteRed`Private`CheckDefs[$b]
BasisDirectory[$b]
